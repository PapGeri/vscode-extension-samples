import * as fs from 'fs';
import { P4grammarListener } from '../src/antlr_autogenerated/P4grammarListener';
import { P4grammarLexer } from '../src/antlr_autogenerated/P4grammarLexer';
import { CharStreams, CommonTokenStream } from 'antlr4ts';
import { P4grammarParser } from '../src/antlr_autogenerated/P4grammarParser';
import { ParseTree } from 'antlr4ts/tree/ParseTree';
import { ParseTreeWalker } from 'antlr4ts/tree/ParseTreeWalker';

export const getFileContentFromFileName = (fileName: string): string => {
	const fullPath: string = './server/__tests__/testFiles/' + fileName;
	return fs.readFileSync(fullPath).toString();
} 

export const setupAntlr = (file: string, listener: P4grammarListener): void => {
	let lexer: P4grammarLexer = new P4grammarLexer(CharStreams.fromString(file));
	let token: CommonTokenStream = new CommonTokenStream(lexer);
	let parser: P4grammarParser = new P4grammarParser(token);

	parser.buildParseTree = true;
	let tree: ParseTree = parser.start();
	let walker: ParseTreeWalker = new ParseTreeWalker();
	// for(let listener of listeners) {
	// 	walker.walk(listener, tree);
	// }
	walker.walk(listener, tree);
}